{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\melis\\\\OneDrive\\\\Documents\\\\ENSIIE\\\\S1\\\\web\\\\PROJET-1\\\\boite-a-mot-good-vers\\\\front\\\\src\\\\pages\\\\Home\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport '../../css/accueil.css';\nimport { useLanguage } from '../../store/languageContext';\nimport { useTheme } from '../../store/themeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [word, setWord] = useState(\"\");\n  const [definition, setDefinition] = useState('');\n  const [translatedMot, setTranslatedMot] = useState('');\n  const [translatedDefinition, setTranslatedDefinition] = useState('');\n  const {\n    language,\n    languageData\n  } = useLanguage();\n  const {\n    themeData\n  } = useTheme();\n  // Crée une référence pour l'icône de favoris\n  const favIconRef = useRef(null);\n\n  // Fonction pour récupérer la définition du mot via l'API DictionaryAPI\n  const fetchDefinitionFromDictionaryAPI = async mot => {\n    if (!mot) return;\n    const url = `https://api.dictionaryapi.dev/api/v2/entries/en/${mot}`;\n    try {\n      var _data$, _data$$meanings$, _data$$meanings$$defi;\n      const response = await fetch(url);\n      const data = await response.json();\n      const def = ((_data$ = data[0]) === null || _data$ === void 0 ? void 0 : (_data$$meanings$ = _data$.meanings[0]) === null || _data$$meanings$ === void 0 ? void 0 : (_data$$meanings$$defi = _data$$meanings$.definitions[0]) === null || _data$$meanings$$defi === void 0 ? void 0 : _data$$meanings$$defi.definition) || 'Définition introuvable';\n      setDefinition(def);\n    } catch (error) {\n      console.error(`Erreur lors du chargement de la définition pour ${mot}:`, error);\n      setDefinition('Erreur de chargement');\n    }\n  };\n\n  // Fonction pour traduire un texte via l'API Google Translate\n  const translateText = async (text, targetLang) => {\n    const sourceLang = 'en';\n    const url = `https://translate.googleapis.com/translate_a/single?client=gtx&sl=${sourceLang}&tl=${targetLang}&dt=t&q=${encodeURI(text)}`;\n    try {\n      var _data$2, _data$2$;\n      const response = await fetch(url);\n      const data = await response.json();\n      return (data === null || data === void 0 ? void 0 : (_data$2 = data[0]) === null || _data$2 === void 0 ? void 0 : (_data$2$ = _data$2[0]) === null || _data$2$ === void 0 ? void 0 : _data$2$[0]) || text;\n    } catch (error) {\n      console.error('Erreur lors de la traduction:', error);\n      return text;\n    }\n  };\n\n  // Fonction pour traduire le mot et sa définition\n  const fetchTranslations = async () => {\n    if (language === 'en') {\n      setTranslatedMot(word);\n      setTranslatedDefinition(definition);\n    } else {\n      const translatedMot = await translateText(word, language);\n      const translatedDef = await translateText(definition, language);\n      setTranslatedMot(translatedMot);\n      setTranslatedDefinition(translatedDef);\n    }\n  };\n\n  // Chercher la définition et la traduction lors de la recherche\n  const SearchWord = async event => {\n    event.preventDefault();\n    await fetchDefinitionFromDictionaryAPI(word);\n    await fetchTranslations();\n  };\n  useEffect(() => {\n    if (definition) {\n      fetchTranslations();\n    }\n  }, [language, definition]);\n  const addFavWords = async () => {\n    const motFr = language === 'en' ? await translateText(word, 'fr') : translatedMot;\n    const defFr = language === 'en' ? await translateText(definition, 'fr') : translatedDefinition;\n    try {\n      const response = await fetch('http://localhost/word-box/server/routeur.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: new URLSearchParams({\n          objet: 'Mot_sympa',\n          action: 'createWord',\n          nomMot: word,\n          nomMotFr: motFr,\n          definitionMotFR: defFr,\n          definitionMotENG: definition\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Erreur HTTP ! statut : ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Réponse du webservice:', data);\n      return data.data || [];\n    } catch (error) {\n      console.error(\"Erreur lors de l'ajout du mot favori :\", error);\n      return [];\n    }\n  };\n  const addFavWordsToUser = async (login, numMot) => {\n    try {\n      const response = await fetch('http://localhost/word-box/server/routeur.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: new URLSearchParams({\n          objet: 'Liste_mot_sympa',\n          action: 'createWord',\n          userName: login,\n          numMot: numMot\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Erreur HTTP ! statut : ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Réponse du webservice:', data);\n      return data.data || [];\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération des mots favoris :\", error);\n      return [];\n    }\n  };\n  const deleteFavWordsToUser = async (login, numMot) => {\n    try {\n      const response = await fetch('http://localhost/word-box/server/routeur.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: new URLSearchParams({\n          objet: 'Liste_mot_sympa',\n          action: 'delete',\n          userName: login,\n          numMot: numMot\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Erreur HTTP ! statut : ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Réponse du webservice:', data);\n      return data.data || [];\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération des mots favoris :\", error);\n      return [];\n    }\n  };\n\n  // Gestion des favoris\n  const supprFavoris = async word => {\n    const icon = favIconRef.current; // Utilisation de la référence\n    let user = sessionStorage.getItem('userName');\n\n    // Vérifier si l'utilisateur est connecté\n    if (!user) {\n      console.error(\"L'utilisateur n'est pas connecté\");\n      window.location.href = '/no-account';\n    }\n    if (icon) {\n      icon.classList.toggle('bi-suit-heart-fill');\n      icon.classList.toggle('bi-suit-heart');\n    }\n    if (icon.classList.contains('bi-suit-heart-fill')) {\n      let word = await addFavWords();\n      console.log('mot :', word);\n      let numMot = word.numMot;\n      await addFavWordsToUser(user, numMot);\n    } else {\n      await deleteFavWordsToUser(user, word.numMot);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    class: themeData.main,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: themeData.wrapper + \" fit-box center-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          \"data-translate-key\": \"titleSearch\",\n          children: languageData.titleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: SearchWord,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: themeData.inputBox,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"search\",\n              name: \"search\",\n              value: word,\n              onChange: event => setWord(event.target.value),\n              placeholder: languageData.enterWord\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: themeData.btn,\n            type: \"submit\",\n            \"data-translate-key\": \"search\",\n            children: languageData.search\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"result\",\n        children: translatedMot && /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"wrapper fit-box center-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: translatedMot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"bi bi-suit-heart\",\n            ref: favIconRef,\n            onClick: () => supprFavoris(word)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: languageData.definition\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 18\n            }, this), \" \", translatedDefinition || languageData.loading]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"wviP1JdPlJx+thQOgGt4tSOY19A=\", false, function () {\n  return [useLanguage, useTheme];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useLanguage","useTheme","jsxDEV","_jsxDEV","Home","_s","word","setWord","definition","setDefinition","translatedMot","setTranslatedMot","translatedDefinition","setTranslatedDefinition","language","languageData","themeData","favIconRef","fetchDefinitionFromDictionaryAPI","mot","url","_data$","_data$$meanings$","_data$$meanings$$defi","response","fetch","data","json","def","meanings","definitions","error","console","translateText","text","targetLang","sourceLang","encodeURI","_data$2","_data$2$","fetchTranslations","translatedDef","SearchWord","event","preventDefault","addFavWords","motFr","defFr","method","headers","body","URLSearchParams","objet","action","nomMot","nomMotFr","definitionMotFR","definitionMotENG","ok","Error","status","log","addFavWordsToUser","login","numMot","userName","deleteFavWordsToUser","supprFavoris","icon","current","user","sessionStorage","getItem","window","location","href","classList","toggle","contains","class","main","children","wrapper","titleSearch","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","inputBox","type","id","name","value","onChange","target","placeholder","enterWord","btn","search","ref","onClick","loading","_c","$RefreshReg$"],"sources":["C:/Users/melis/OneDrive/Documents/ENSIIE/S1/web/PROJET-1/boite-a-mot-good-vers/front/src/pages/Home/Home.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport '../../css/accueil.css';\r\nimport { useLanguage } from '../../store/languageContext';\r\nimport { useTheme } from '../../store/themeContext';\r\n\r\nfunction Home() {\r\n  const [word, setWord] = useState(\"\");\r\n  const [definition, setDefinition] = useState('');\r\n  const [translatedMot, setTranslatedMot] = useState('');\r\n  const [translatedDefinition, setTranslatedDefinition] = useState('');\r\n  const { language, languageData } = useLanguage();\r\n  const { themeData } = useTheme();\r\n  // Crée une référence pour l'icône de favoris\r\n  const favIconRef = useRef(null);\r\n\r\n  // Fonction pour récupérer la définition du mot via l'API DictionaryAPI\r\n  const fetchDefinitionFromDictionaryAPI = async (mot) => {\r\n    if (!mot) return;\r\n    const url = `https://api.dictionaryapi.dev/api/v2/entries/en/${mot}`;\r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      const def = data[0]?.meanings[0]?.definitions[0]?.definition || 'Définition introuvable';\r\n      setDefinition(def);\r\n    } catch (error) {\r\n      console.error(`Erreur lors du chargement de la définition pour ${mot}:`, error);\r\n      setDefinition('Erreur de chargement');\r\n    }\r\n  };\r\n\r\n  // Fonction pour traduire un texte via l'API Google Translate\r\n  const translateText = async (text, targetLang) => {\r\n    const sourceLang = 'en';\r\n    const url = `https://translate.googleapis.com/translate_a/single?client=gtx&sl=${sourceLang}&tl=${targetLang}&dt=t&q=${encodeURI(text)}`;\r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      return data?.[0]?.[0]?.[0] || text;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la traduction:', error);\r\n      return text;\r\n    }\r\n  };\r\n\r\n  // Fonction pour traduire le mot et sa définition\r\n  const fetchTranslations = async () => {\r\n    if (language === 'en') {\r\n      setTranslatedMot(word);\r\n      setTranslatedDefinition(definition);\r\n    } else {\r\n      const translatedMot = await translateText(word, language);\r\n      const translatedDef = await translateText(definition, language);\r\n      setTranslatedMot(translatedMot);\r\n      setTranslatedDefinition(translatedDef);\r\n    }\r\n  };\r\n\r\n  // Chercher la définition et la traduction lors de la recherche\r\n  const SearchWord = async (event) => {\r\n    event.preventDefault();\r\n    await fetchDefinitionFromDictionaryAPI(word);\r\n    await fetchTranslations();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (definition) {\r\n      fetchTranslations();\r\n    }\r\n  }, [language, definition]);\r\n\r\n  const addFavWords = async () => {\r\n\r\n    const motFr = language === 'en' ? await translateText(word, 'fr') : translatedMot;\r\n    const defFr = language === 'en' ? await translateText(definition, 'fr') : translatedDefinition;\r\n\r\n    try {\r\n      const response = await fetch('http://localhost/word-box/server/routeur.php', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: new URLSearchParams({\r\n          objet: 'Mot_sympa',\r\n          action: 'createWord',\r\n          nomMot: word,\r\n          nomMotFr: motFr,\r\n          definitionMotFR: defFr,\r\n          definitionMotENG: definition,\r\n        }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`Erreur HTTP ! statut : ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      console.log('Réponse du webservice:', data);\r\n      return data.data || [];\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de l'ajout du mot favori :\", error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const addFavWordsToUser = async (login, numMot) => {\r\n    try {\r\n      const response = await fetch('http://localhost/word-box/server/routeur.php', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: new URLSearchParams({\r\n          objet: 'Liste_mot_sympa',\r\n          action: 'createWord',\r\n          userName: login,\r\n          numMot: numMot,\r\n        }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`Erreur HTTP ! statut : ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Réponse du webservice:', data);\r\n      return data.data || [];\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la récupération des mots favoris :\", error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const deleteFavWordsToUser = async (login, numMot) => {\r\n    try {\r\n      const response = await fetch('http://localhost/word-box/server/routeur.php', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: new URLSearchParams({\r\n          objet: 'Liste_mot_sympa',\r\n          action: 'delete',\r\n          userName: login,\r\n          numMot: numMot,\r\n        }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`Erreur HTTP ! statut : ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Réponse du webservice:', data);\r\n      return data.data || [];\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la récupération des mots favoris :\", error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  // Gestion des favoris\r\n  const supprFavoris = async (word) => {\r\n    const icon = favIconRef.current; // Utilisation de la référence\r\n    let user = sessionStorage.getItem('userName');\r\n\r\n    // Vérifier si l'utilisateur est connecté\r\n    if (!user) {\r\n      console.error(\"L'utilisateur n'est pas connecté\");\r\n      window.location.href = '/no-account';\r\n    }\r\n\r\n    if (icon) {\r\n      icon.classList.toggle('bi-suit-heart-fill');\r\n      icon.classList.toggle('bi-suit-heart');\r\n    }\r\n    if (icon.classList.contains('bi-suit-heart-fill')) {\r\n      let word = await addFavWords();\r\n      console.log('mot :', word);\r\n      let numMot = word.numMot;\r\n      await addFavWordsToUser(user, numMot);\r\n    } else {\r\n      await deleteFavWordsToUser(user, word.numMot);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main class={themeData.main}>\r\n      <div class=\"container\">\r\n        <div class={themeData.wrapper+\" fit-box center-text\"}>\r\n          <h2 data-translate-key=\"titleSearch\">{languageData.titleSearch}</h2>\r\n          <form onSubmit={SearchWord}>\r\n            <div class={themeData.inputBox}>\r\n              <input\r\n                type=\"text\"\r\n                id=\"search\"\r\n                name=\"search\"\r\n                value={word}\r\n                onChange={(event) => setWord(event.target.value)}\r\n                placeholder={languageData.enterWord}\r\n              />\r\n            </div>\r\n            <button class={themeData.btn} type=\"submit\" data-translate-key=\"search\">{languageData.search}</button>\r\n          </form>\r\n        </div>\r\n\r\n        {/* Affichage des résultats */}\r\n        <div class=\"result\">\r\n          {translatedMot && (\r\n            <div class=\"wrapper fit-box center-text\">\r\n              <h1>{translatedMot}</h1>\r\n              {/* Utilisation de la référence pour l'icône */}\r\n              <i\r\n                class=\"bi bi-suit-heart\"\r\n                ref={favIconRef}\r\n                onClick={() => supprFavoris(word)}\r\n              ></i>\r\n              <p><strong>{languageData.definition}</strong> {translatedDefinition || languageData.loading}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,uBAAuB;AAC9B,SAASC,WAAW,QAAQ,6BAA6B;AACzD,SAASC,QAAQ,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACe,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAM;IAAEiB,QAAQ;IAAEC;EAAa,CAAC,GAAGf,WAAW,CAAC,CAAC;EAChD,MAAM;IAAEgB;EAAU,CAAC,GAAGf,QAAQ,CAAC,CAAC;EAChC;EACA,MAAMgB,UAAU,GAAGlB,MAAM,CAAC,IAAI,CAAC;;EAE/B;EACA,MAAMmB,gCAAgC,GAAG,MAAOC,GAAG,IAAK;IACtD,IAAI,CAACA,GAAG,EAAE;IACV,MAAMC,GAAG,GAAG,mDAAmDD,GAAG,EAAE;IACpE,IAAI;MAAA,IAAAE,MAAA,EAAAC,gBAAA,EAAAC,qBAAA;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,CAAC;MACjC,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,MAAMC,GAAG,GAAG,EAAAP,MAAA,GAAAK,IAAI,CAAC,CAAC,CAAC,cAAAL,MAAA,wBAAAC,gBAAA,GAAPD,MAAA,CAASQ,QAAQ,CAAC,CAAC,CAAC,cAAAP,gBAAA,wBAAAC,qBAAA,GAApBD,gBAAA,CAAsBQ,WAAW,CAAC,CAAC,CAAC,cAAAP,qBAAA,uBAApCA,qBAAA,CAAsCf,UAAU,KAAI,wBAAwB;MACxFC,aAAa,CAACmB,GAAG,CAAC;IACpB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mDAAmDZ,GAAG,GAAG,EAAEY,KAAK,CAAC;MAC/EtB,aAAa,CAAC,sBAAsB,CAAC;IACvC;EACF,CAAC;;EAED;EACA,MAAMwB,aAAa,GAAG,MAAAA,CAAOC,IAAI,EAAEC,UAAU,KAAK;IAChD,MAAMC,UAAU,GAAG,IAAI;IACvB,MAAMhB,GAAG,GAAG,qEAAqEgB,UAAU,OAAOD,UAAU,WAAWE,SAAS,CAACH,IAAI,CAAC,EAAE;IACxI,IAAI;MAAA,IAAAI,OAAA,EAAAC,QAAA;MACF,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,CAAC;MACjC,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,OAAO,CAAAD,IAAI,aAAJA,IAAI,wBAAAY,OAAA,GAAJZ,IAAI,CAAG,CAAC,CAAC,cAAAY,OAAA,wBAAAC,QAAA,GAATD,OAAA,CAAY,CAAC,CAAC,cAAAC,QAAA,uBAAdA,QAAA,CAAiB,CAAC,CAAC,KAAIL,IAAI;IACpC,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD,OAAOG,IAAI;IACb;EACF,CAAC;;EAED;EACA,MAAMM,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI1B,QAAQ,KAAK,IAAI,EAAE;MACrBH,gBAAgB,CAACL,IAAI,CAAC;MACtBO,uBAAuB,CAACL,UAAU,CAAC;IACrC,CAAC,MAAM;MACL,MAAME,aAAa,GAAG,MAAMuB,aAAa,CAAC3B,IAAI,EAAEQ,QAAQ,CAAC;MACzD,MAAM2B,aAAa,GAAG,MAAMR,aAAa,CAACzB,UAAU,EAAEM,QAAQ,CAAC;MAC/DH,gBAAgB,CAACD,aAAa,CAAC;MAC/BG,uBAAuB,CAAC4B,aAAa,CAAC;IACxC;EACF,CAAC;;EAED;EACA,MAAMC,UAAU,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAM1B,gCAAgC,CAACZ,IAAI,CAAC;IAC5C,MAAMkC,iBAAiB,CAAC,CAAC;EAC3B,CAAC;EAED1C,SAAS,CAAC,MAAM;IACd,IAAIU,UAAU,EAAE;MACdgC,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAAC1B,QAAQ,EAAEN,UAAU,CAAC,CAAC;EAE1B,MAAMqC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAE9B,MAAMC,KAAK,GAAGhC,QAAQ,KAAK,IAAI,GAAG,MAAMmB,aAAa,CAAC3B,IAAI,EAAE,IAAI,CAAC,GAAGI,aAAa;IACjF,MAAMqC,KAAK,GAAGjC,QAAQ,KAAK,IAAI,GAAG,MAAMmB,aAAa,CAACzB,UAAU,EAAE,IAAI,CAAC,GAAGI,oBAAoB;IAE9F,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;QAC3EuB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAE,IAAIC,eAAe,CAAC;UACxBC,KAAK,EAAE,WAAW;UAClBC,MAAM,EAAE,YAAY;UACpBC,MAAM,EAAEhD,IAAI;UACZiD,QAAQ,EAAET,KAAK;UACfU,eAAe,EAAET,KAAK;UACtBU,gBAAgB,EAAEjD;QACpB,CAAC;MACH,CAAC,CAAC;MACF,IAAI,CAACgB,QAAQ,CAACkC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0BnC,QAAQ,CAACoC,MAAM,EAAE,CAAC;MAC9D;MACA,MAAMlC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCK,OAAO,CAAC6B,GAAG,CAAC,wBAAwB,EAAEnC,IAAI,CAAC;MAC3C,OAAOA,IAAI,CAACA,IAAI,IAAI,EAAE;IACxB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAC9D,OAAO,EAAE;IACX;EACF,CAAC;EAED,MAAM+B,iBAAiB,GAAG,MAAAA,CAAOC,KAAK,EAAEC,MAAM,KAAK;IACjD,IAAI;MACF,MAAMxC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;QAC3EuB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAE,IAAIC,eAAe,CAAC;UACxBC,KAAK,EAAE,iBAAiB;UACxBC,MAAM,EAAE,YAAY;UACpBY,QAAQ,EAAEF,KAAK;UACfC,MAAM,EAAEA;QACV,CAAC;MACH,CAAC,CAAC;MACF,IAAI,CAACxC,QAAQ,CAACkC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0BnC,QAAQ,CAACoC,MAAM,EAAE,CAAC;MAC9D;MAEA,MAAMlC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCK,OAAO,CAAC6B,GAAG,CAAC,wBAAwB,EAAEnC,IAAI,CAAC;MAC3C,OAAOA,IAAI,CAACA,IAAI,IAAI,EAAE;IACxB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mDAAmD,EAAEA,KAAK,CAAC;MACzE,OAAO,EAAE;IACX;EACF,CAAC;EAED,MAAMmC,oBAAoB,GAAG,MAAAA,CAAOH,KAAK,EAAEC,MAAM,KAAK;IACpD,IAAI;MACF,MAAMxC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;QAC3EuB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAE,IAAIC,eAAe,CAAC;UACxBC,KAAK,EAAE,iBAAiB;UACxBC,MAAM,EAAE,QAAQ;UAChBY,QAAQ,EAAEF,KAAK;UACfC,MAAM,EAAEA;QACV,CAAC;MACH,CAAC,CAAC;MACF,IAAI,CAACxC,QAAQ,CAACkC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0BnC,QAAQ,CAACoC,MAAM,EAAE,CAAC;MAC9D;MAEA,MAAMlC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCK,OAAO,CAAC6B,GAAG,CAAC,wBAAwB,EAAEnC,IAAI,CAAC;MAC3C,OAAOA,IAAI,CAACA,IAAI,IAAI,EAAE;IACxB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mDAAmD,EAAEA,KAAK,CAAC;MACzE,OAAO,EAAE;IACX;EACF,CAAC;;EAED;EACA,MAAMoC,YAAY,GAAG,MAAO7D,IAAI,IAAK;IACnC,MAAM8D,IAAI,GAAGnD,UAAU,CAACoD,OAAO,CAAC,CAAC;IACjC,IAAIC,IAAI,GAAGC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;;IAE7C;IACA,IAAI,CAACF,IAAI,EAAE;MACTtC,OAAO,CAACD,KAAK,CAAC,kCAAkC,CAAC;MACjD0C,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,aAAa;IACtC;IAEA,IAAIP,IAAI,EAAE;MACRA,IAAI,CAACQ,SAAS,CAACC,MAAM,CAAC,oBAAoB,CAAC;MAC3CT,IAAI,CAACQ,SAAS,CAACC,MAAM,CAAC,eAAe,CAAC;IACxC;IACA,IAAIT,IAAI,CAACQ,SAAS,CAACE,QAAQ,CAAC,oBAAoB,CAAC,EAAE;MACjD,IAAIxE,IAAI,GAAG,MAAMuC,WAAW,CAAC,CAAC;MAC9Bb,OAAO,CAAC6B,GAAG,CAAC,OAAO,EAAEvD,IAAI,CAAC;MAC1B,IAAI0D,MAAM,GAAG1D,IAAI,CAAC0D,MAAM;MACxB,MAAMF,iBAAiB,CAACQ,IAAI,EAAEN,MAAM,CAAC;IACvC,CAAC,MAAM;MACL,MAAME,oBAAoB,CAACI,IAAI,EAAEhE,IAAI,CAAC0D,MAAM,CAAC;IAC/C;EACF,CAAC;EAED,oBACE7D,OAAA;IAAM4E,KAAK,EAAE/D,SAAS,CAACgE,IAAK;IAAAC,QAAA,eAC1B9E,OAAA;MAAK4E,KAAK,EAAC,WAAW;MAAAE,QAAA,gBACpB9E,OAAA;QAAK4E,KAAK,EAAE/D,SAAS,CAACkE,OAAO,GAAC,sBAAuB;QAAAD,QAAA,gBACnD9E,OAAA;UAAI,sBAAmB,aAAa;UAAA8E,QAAA,EAAElE,YAAY,CAACoE;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpEpF,OAAA;UAAMqF,QAAQ,EAAE9C,UAAW;UAAAuC,QAAA,gBACzB9E,OAAA;YAAK4E,KAAK,EAAE/D,SAAS,CAACyE,QAAS;YAAAR,QAAA,eAC7B9E,OAAA;cACEuF,IAAI,EAAC,MAAM;cACXC,EAAE,EAAC,QAAQ;cACXC,IAAI,EAAC,QAAQ;cACbC,KAAK,EAAEvF,IAAK;cACZwF,QAAQ,EAAGnD,KAAK,IAAKpC,OAAO,CAACoC,KAAK,CAACoD,MAAM,CAACF,KAAK,CAAE;cACjDG,WAAW,EAAEjF,YAAY,CAACkF;YAAU;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNpF,OAAA;YAAQ4E,KAAK,EAAE/D,SAAS,CAACkF,GAAI;YAACR,IAAI,EAAC,QAAQ;YAAC,sBAAmB,QAAQ;YAAAT,QAAA,EAAElE,YAAY,CAACoF;UAAM;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAGNpF,OAAA;QAAK4E,KAAK,EAAC,QAAQ;QAAAE,QAAA,EAChBvE,aAAa,iBACZP,OAAA;UAAK4E,KAAK,EAAC,6BAA6B;UAAAE,QAAA,gBACtC9E,OAAA;YAAA8E,QAAA,EAAKvE;UAAa;YAAA0E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAExBpF,OAAA;YACE4E,KAAK,EAAC,kBAAkB;YACxBqB,GAAG,EAAEnF,UAAW;YAChBoF,OAAO,EAAEA,CAAA,KAAMlC,YAAY,CAAC7D,IAAI;UAAE;YAAA8E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC,eACLpF,OAAA;YAAA8E,QAAA,gBAAG9E,OAAA;cAAA8E,QAAA,EAASlE,YAAY,CAACP;YAAU;cAAA4E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC,KAAC,EAAC3E,oBAAoB,IAAIG,YAAY,CAACuF,OAAO;UAAA;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7F;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX;AAAClF,EAAA,CAtNQD,IAAI;EAAA,QAKwBJ,WAAW,EACxBC,QAAQ;AAAA;AAAAsG,EAAA,GANvBnG,IAAI;AAwNb,eAAeA,IAAI;AAAC,IAAAmG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}