{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\melis\\\\OneDrive\\\\Documents\\\\ENSIIE\\\\S1\\\\web\\\\PROJET-1\\\\boite-a-mot-good-vers\\\\src\\\\pages\\\\Home\\\\Home.jsx\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React from \"react\";\nimport { useState } from \"react\";\nimport $ from \"jquery\";\nimport '../../css/accueil.css';\nimport { useLanguage } from '../../store/languageContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [word, setWord] = useState(\"\");\n  const [definition, setDefinition] = useState('');\n  const [translatedMot, setTranslatedMot] = useState(word);\n  const [translatedDefinition, setTranslatedDefinition] = useState('');\n  const {\n    language,\n    languageData\n  } = useLanguage();\n\n  // Fonction pour récupérer la définition du mot via l'API DictionaryAPI\n  const fetchDefinitionFromDictionaryAPI = async () => {\n    const url = `https://api.dictionaryapi.dev/api/v2/entries/en/${mot}`;\n    try {\n      var _data$, _data$$meanings$, _data$$meanings$$defi;\n      const response = await fetch(url);\n      const data = await response.json();\n      const def = ((_data$ = data[0]) === null || _data$ === void 0 ? void 0 : (_data$$meanings$ = _data$.meanings[0]) === null || _data$$meanings$ === void 0 ? void 0 : (_data$$meanings$$defi = _data$$meanings$.definitions[0]) === null || _data$$meanings$$defi === void 0 ? void 0 : _data$$meanings$$defi.definition) || 'Définition introuvable';\n      setDefinition(def);\n    } catch (error) {\n      console.error(`Erreur lors du chargement de la définition pour ${mot}:`, error);\n      setDefinition('Erreur de chargement');\n    }\n  };\n\n  // Fonction pour traduire un texte via l'API Google Translate\n  const translateText = async (text, targetLang) => {\n    const sourceLang = 'en';\n    const url = `https://translate.googleapis.com/translate_a/single?client=gtx&sl=${sourceLang}&tl=${targetLang}&dt=t&q=${encodeURI(text)}`;\n    try {\n      var _data$2, _data$2$;\n      const response = await fetch(url);\n      const data = await response.json();\n      return (data === null || data === void 0 ? void 0 : (_data$2 = data[0]) === null || _data$2 === void 0 ? void 0 : (_data$2$ = _data$2[0]) === null || _data$2$ === void 0 ? void 0 : _data$2$[0]) || text;\n    } catch (error) {\n      console.error('Erreur lors de la traduction:', error);\n      return text;\n    }\n  };\n\n  // Fonction pour traduire le mot et sa définition\n  const fetchTranslations = async () => {\n    if (language === 'en') {\n      setTranslatedMot(mot);\n      setTranslatedDefinition(definition);\n    } else {\n      const translatedMot = await translateText(mot, language);\n      const translatedDef = await translateText(definition, language);\n      setTranslatedMot(translatedMot);\n      setTranslatedDefinition(translatedDef);\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetchDefinitionFromDictionaryAPI();\n    };\n    fetchData();\n  }, [mot]);\n  useEffect(() => {\n    const translateData = async () => {\n      await fetchTranslations();\n    };\n    translateData();\n  }, [language, definition]);\n  const supprFavoris = () => {\n    console.log(\"coeur cliqué !\");\n    const icon = document.getElementById('fav-icon');\n    if (icon) {\n      icon.classList.toggle('bi-suit-heart-fill');\n      icon.classList.toggle('bi-suit-heart');\n    }\n  };\n  const SearchWord = event => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"wrapper fit-box center-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        \"data-translate-key\": \"titleSearch\",\n        children: languageData.titleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: SearchWord,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-box \",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"search\",\n            name: \"search\",\n            value: word,\n            onChange: event => setWord(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn\",\n          type: \"submit\",\n          \"data-translate-key\": \"search\",\n          children: languageData.search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"6G+Re4TguhVbqoskYAsOobo825Q=\", false, function () {\n  return [useLanguage];\n});\n_c = Home;\nexport default Home;\n\n/*\r\n* Rédiger méthode qui lorsque qu'on clique sur le coeur, le mot est supprimé de la liste des favoris\r\n*\r\n*\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","$","useLanguage","jsxDEV","_jsxDEV","Home","_s","word","setWord","definition","setDefinition","translatedMot","setTranslatedMot","translatedDefinition","setTranslatedDefinition","language","languageData","fetchDefinitionFromDictionaryAPI","url","mot","_data$","_data$$meanings$","_data$$meanings$$defi","response","fetch","data","json","def","meanings","definitions","error","console","translateText","text","targetLang","sourceLang","encodeURI","_data$2","_data$2$","fetchTranslations","translatedDef","useEffect","fetchData","translateData","supprFavoris","log","icon","document","getElementById","classList","toggle","SearchWord","event","class","children","titleSearch","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","name","value","onChange","search","_c","$RefreshReg$"],"sources":["C:/Users/melis/OneDrive/Documents/ENSIIE/S1/web/PROJET-1/boite-a-mot-good-vers/src/pages/Home/Home.jsx"],"sourcesContent":["// src/App.js\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport $ from \"jquery\";\r\nimport '../../css/accueil.css';\r\nimport { useLanguage } from '../../store/languageContext';\r\n\r\nfunction Home() {\r\n    const [word, setWord] = useState(\"\");\r\n\r\n    const [definition, setDefinition] = useState('');\r\n    const [translatedMot, setTranslatedMot] = useState(word);\r\n    const [translatedDefinition, setTranslatedDefinition] = useState('');\r\n    const { language, languageData } = useLanguage();\r\n  \r\n    // Fonction pour récupérer la définition du mot via l'API DictionaryAPI\r\n    const fetchDefinitionFromDictionaryAPI = async () => {\r\n      const url = `https://api.dictionaryapi.dev/api/v2/entries/en/${mot}`;\r\n      try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        const def = data[0]?.meanings[0]?.definitions[0]?.definition || 'Définition introuvable';\r\n        setDefinition(def);\r\n      } catch (error) {\r\n        console.error(`Erreur lors du chargement de la définition pour ${mot}:`, error);\r\n        setDefinition('Erreur de chargement');\r\n      }\r\n    };\r\n  \r\n    // Fonction pour traduire un texte via l'API Google Translate\r\n    const translateText = async (text, targetLang) => {\r\n      const sourceLang = 'en';\r\n      const url = `https://translate.googleapis.com/translate_a/single?client=gtx&sl=${sourceLang}&tl=${targetLang}&dt=t&q=${encodeURI(text)}`;\r\n      try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        return data?.[0]?.[0]?.[0] || text;\r\n      } catch (error) {\r\n        console.error('Erreur lors de la traduction:', error);\r\n        return text;\r\n      }\r\n    };\r\n  \r\n    // Fonction pour traduire le mot et sa définition\r\n    const fetchTranslations = async () => {\r\n      if (language === 'en') {\r\n        setTranslatedMot(mot);\r\n        setTranslatedDefinition(definition);\r\n      } else {\r\n        const translatedMot = await translateText(mot, language);\r\n        const translatedDef = await translateText(definition, language);\r\n        setTranslatedMot(translatedMot);\r\n        setTranslatedDefinition(translatedDef);\r\n      }\r\n    };\r\n  \r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        await fetchDefinitionFromDictionaryAPI();\r\n      };\r\n      fetchData();\r\n    }, [mot]);\r\n  \r\n    useEffect(() => {\r\n      const translateData = async () => {\r\n        await fetchTranslations();\r\n      };\r\n      translateData();\r\n    }, [language, definition]);\r\n  \r\n    const supprFavoris = () => {\r\n      console.log(\"coeur cliqué !\");\r\n      const icon = document.getElementById('fav-icon');\r\n      if (icon) {\r\n        icon.classList.toggle('bi-suit-heart-fill');\r\n        icon.classList.toggle('bi-suit-heart');\r\n      }\r\n    };\r\n    const SearchWord = (event) => { };\r\n\r\n    return (\r\n        <div class=\"container\">\r\n            <div class=\"wrapper fit-box center-text\">\r\n                <h2 data-translate-key=\"titleSearch\">{languageData.titleSearch}</h2>\r\n                <form\r\n                    onSubmit={SearchWord}\r\n                >\r\n                    <div class=\"input-box \"><input\r\n                        type=\"text\"\r\n                        id=\"search\"\r\n                        name=\"search\"\r\n                        value={word}\r\n                        onChange={(event) =>\r\n                            setWord(event)\r\n                        }\r\n                    /></div>\r\n                    <button class=\"btn\" type=\"submit\" data-translate-key=\"search\">{languageData.search}</button>\r\n\r\n                </form>\r\n\r\n                <div class=\"result\">\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n\r\n/*\r\n* Rédiger méthode qui lorsque qu'on clique sur le coeur, le mot est supprimé de la liste des favoris\r\n*\r\n*\r\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}