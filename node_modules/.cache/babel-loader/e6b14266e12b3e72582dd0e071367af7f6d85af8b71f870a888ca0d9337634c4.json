{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\melis\\\\OneDrive\\\\Documents\\\\ENSIIE\\\\S1\\\\web\\\\PROJET-1\\\\boite-a-mot-good-vers\\\\src\\\\pages\\\\Home\\\\Home.jsx\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from \"react\";\nimport '../../css/accueil.css';\nimport { useLanguage } from '../../store/languageContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [word, setWord] = useState(\"\");\n  const [definition, setDefinition] = useState('');\n  const [translatedMot, setTranslatedMot] = useState('');\n  const [translatedDefinition, setTranslatedDefinition] = useState('');\n  const {\n    language,\n    languageData\n  } = useLanguage();\n\n  // Fonction pour récupérer la définition du mot via l'API DictionaryAPI\n  const fetchDefinitionFromDictionaryAPI = async mot => {\n    if (!mot) return;\n    const url = `https://api.dictionaryapi.dev/api/v2/entries/en/${mot}`;\n    try {\n      var _data$, _data$$meanings$, _data$$meanings$$defi;\n      const response = await fetch(url);\n      const data = await response.json();\n      const def = ((_data$ = data[0]) === null || _data$ === void 0 ? void 0 : (_data$$meanings$ = _data$.meanings[0]) === null || _data$$meanings$ === void 0 ? void 0 : (_data$$meanings$$defi = _data$$meanings$.definitions[0]) === null || _data$$meanings$$defi === void 0 ? void 0 : _data$$meanings$$defi.definition) || 'Définition introuvable';\n      setDefinition(def);\n    } catch (error) {\n      console.error(`Erreur lors du chargement de la définition pour ${mot}:`, error);\n      setDefinition('Erreur de chargement');\n    }\n  };\n\n  // Fonction pour traduire un texte via l'API Google Translate\n  const translateText = async (text, targetLang) => {\n    const sourceLang = 'en';\n    const url = `https://translate.googleapis.com/translate_a/single?client=gtx&sl=${sourceLang}&tl=${targetLang}&dt=t&q=${encodeURI(text)}`;\n    try {\n      var _data$2, _data$2$;\n      const response = await fetch(url);\n      const data = await response.json();\n      return (data === null || data === void 0 ? void 0 : (_data$2 = data[0]) === null || _data$2 === void 0 ? void 0 : (_data$2$ = _data$2[0]) === null || _data$2$ === void 0 ? void 0 : _data$2$[0]) || text;\n    } catch (error) {\n      console.error('Erreur lors de la traduction:', error);\n      return text;\n    }\n  };\n\n  // Fonction pour traduire le mot et sa définition\n  const fetchTranslations = async () => {\n    if (language === 'en') {\n      setTranslatedMot(word);\n      setTranslatedDefinition(definition);\n    } else {\n      const translatedMot = await translateText(word, language);\n      const translatedDef = await translateText(definition, language);\n      setTranslatedMot(translatedMot);\n      setTranslatedDefinition(translatedDef);\n    }\n  };\n\n  // Chercher la définition et la traduction lors de la recherche\n  const SearchWord = async event => {\n    event.preventDefault();\n    await fetchDefinitionFromDictionaryAPI(word);\n    await fetchTranslations();\n  };\n  useEffect(() => {\n    if (definition) {\n      fetchTranslations();\n    }\n  }, [language, definition]);\n\n  // Fonction pour récupérer les mots favoris depuis le backend PHP\n  const deleteFavWords = async login => {\n    try {\n      const response = await fetch('http://localhost/word-box/server/routeur.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: new URLSearchParams({\n          objet: 'Mot_sympa',\n          action: 'userFavWords',\n          userName: login\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Erreur HTTP ! statut : ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Réponse du webservice:', data);\n      return data.data || [];\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération des mots favoris :\", error);\n      return [];\n    }\n  };\n  const addFavWords = async () => {\n    try {\n      const response = await fetch('http://localhost/word-box/server/routeur.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: new URLSearchParams({\n          objet: 'Mot_sympa',\n          action: 'create',\n          nomMot: word,\n          nomMotFr: translatedMot,\n          definitionMotFR: translatedDefinition,\n          definitionMotENG: definition\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Erreur HTTP ! statut : ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Réponse du webservice:', data);\n      return data.data || [];\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération des mots favoris :\", error);\n      return [];\n    }\n  };\n  const addFavWordsToUser = async (login, numMot) => {\n    try {\n      const response = await fetch('http://localhost/word-box/server/routeur.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: new URLSearchParams({\n          objet: 'Liste_mot_sympa',\n          action: 'create',\n          userName: login,\n          numMot: numMot\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Erreur HTTP ! statut : ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Réponse du webservice:', data);\n      return data.data || [];\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération des mots favoris :\", error);\n      return [];\n    }\n  };\n  const deleteFavWordsToUser = async (login, numMot) => {\n    try {\n      const response = await fetch('http://localhost/word-box/server/routeur.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: new URLSearchParams({\n          objet: 'Liste_mot_sympa',\n          action: 'delete',\n          userName: login,\n          numMot: numMot\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Erreur HTTP ! statut : ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Réponse du webservice:', data);\n      return data.data || [];\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération des mots favoris :\", error);\n      return [];\n    }\n  };\n\n  // Gestion des favoris\n  const supprFavoris = async () => {\n    const icon = document.getElementById('fav-icon');\n    let user = sessionStorage.getItem('userName');\n    let numMot = word[0].numMot;\n    if (icon) {\n      icon.classList.toggle('bi-suit-heart-fill');\n      icon.classList.toggle('bi-suit-heart');\n    }\n    if (icon.classList.contains('bi-suit-heart-fill')) {\n      let word = await addFavWords();\n      await addFavWordsToUser(user, numMot);\n    } else {\n      let numMot = word[0].numMot;\n      await deleteFavWordsToUser(user, numMot);\n      deleteFavWords(numMot);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper fit-box center-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        \"data-translate-key\": \"titleSearch\",\n        children: languageData.titleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: SearchWord,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-box\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"search\",\n            name: \"search\",\n            value: word,\n            onChange: event => setWord(event.target.value),\n            placeholder: languageData.enterWord\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          type: \"submit\",\n          \"data-translate-key\": \"search\",\n          children: languageData.search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: translatedMot && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper fit-box center-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: translatedMot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-suit-heart\",\n          id: \"fav-icon\",\n          onClick: supprFavoris\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: languageData.definition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 16\n          }, this), \" \", translatedDefinition || 'Chargement...']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"LpmpBYim21ImMgweUa50BHPIFwY=\", false, function () {\n  return [useLanguage];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useLanguage","jsxDEV","_jsxDEV","Home","_s","word","setWord","definition","setDefinition","translatedMot","setTranslatedMot","translatedDefinition","setTranslatedDefinition","language","languageData","fetchDefinitionFromDictionaryAPI","mot","url","_data$","_data$$meanings$","_data$$meanings$$defi","response","fetch","data","json","def","meanings","definitions","error","console","translateText","text","targetLang","sourceLang","encodeURI","_data$2","_data$2$","fetchTranslations","translatedDef","SearchWord","event","preventDefault","deleteFavWords","login","method","headers","body","URLSearchParams","objet","action","userName","ok","Error","status","log","addFavWords","nomMot","nomMotFr","definitionMotFR","definitionMotENG","addFavWordsToUser","numMot","deleteFavWordsToUser","supprFavoris","icon","document","getElementById","user","sessionStorage","getItem","classList","toggle","contains","className","children","titleSearch","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","name","value","onChange","target","placeholder","enterWord","search","onClick","_c","$RefreshReg$"],"sources":["C:/Users/melis/OneDrive/Documents/ENSIIE/S1/web/PROJET-1/boite-a-mot-good-vers/src/pages/Home/Home.jsx"],"sourcesContent":["// src/App.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport '../../css/accueil.css';\r\nimport { useLanguage } from '../../store/languageContext';\r\n\r\nfunction Home() {\r\n  const [word, setWord] = useState(\"\");\r\n  const [definition, setDefinition] = useState('');\r\n  const [translatedMot, setTranslatedMot] = useState('');\r\n  const [translatedDefinition, setTranslatedDefinition] = useState('');\r\n  const { language, languageData } = useLanguage();\r\n\r\n  // Fonction pour récupérer la définition du mot via l'API DictionaryAPI\r\n  const fetchDefinitionFromDictionaryAPI = async (mot) => {\r\n    if (!mot) return;\r\n    const url = `https://api.dictionaryapi.dev/api/v2/entries/en/${mot}`;\r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      const def = data[0]?.meanings[0]?.definitions[0]?.definition || 'Définition introuvable';\r\n      setDefinition(def);\r\n    } catch (error) {\r\n      console.error(`Erreur lors du chargement de la définition pour ${mot}:`, error);\r\n      setDefinition('Erreur de chargement');\r\n    }\r\n  };\r\n\r\n  // Fonction pour traduire un texte via l'API Google Translate\r\n  const translateText = async (text, targetLang) => {\r\n    const sourceLang = 'en';\r\n    const url = `https://translate.googleapis.com/translate_a/single?client=gtx&sl=${sourceLang}&tl=${targetLang}&dt=t&q=${encodeURI(text)}`;\r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      return data?.[0]?.[0]?.[0] || text;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la traduction:', error);\r\n      return text;\r\n    }\r\n  };\r\n\r\n  // Fonction pour traduire le mot et sa définition\r\n  const fetchTranslations = async () => {\r\n    if (language === 'en') {\r\n      setTranslatedMot(word);\r\n      setTranslatedDefinition(definition);\r\n    } else {\r\n      const translatedMot = await translateText(word, language);\r\n      const translatedDef = await translateText(definition, language);\r\n      setTranslatedMot(translatedMot);\r\n      setTranslatedDefinition(translatedDef);\r\n    }\r\n  };\r\n\r\n  // Chercher la définition et la traduction lors de la recherche\r\n  const SearchWord = async (event) => {\r\n    event.preventDefault();\r\n    await fetchDefinitionFromDictionaryAPI(word);\r\n    await fetchTranslations();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (definition) {\r\n      fetchTranslations();\r\n    }\r\n  }, [language, definition]);\r\n\r\n\r\n\r\n  // Fonction pour récupérer les mots favoris depuis le backend PHP\r\n  const deleteFavWords = async (login) => {\r\n    try {\r\n      const response = await fetch('http://localhost/word-box/server/routeur.php', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: new URLSearchParams({\r\n          objet: 'Mot_sympa',\r\n          action: 'userFavWords',\r\n          userName: login,\r\n\r\n        }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`Erreur HTTP ! statut : ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Réponse du webservice:', data);\r\n      return data.data || [];\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la récupération des mots favoris :\", error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const addFavWords = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost/word-box/server/routeur.php', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: new URLSearchParams({\r\n          objet: 'Mot_sympa',\r\n          action: 'create',\r\n          nomMot: word,\r\n          nomMotFr: translatedMot,\r\n          definitionMotFR: translatedDefinition,\r\n          definitionMotENG: definition,\r\n\r\n        }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`Erreur HTTP ! statut : ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      console.log('Réponse du webservice:', data);\r\n      return data.data || [];\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la récupération des mots favoris :\", error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const addFavWordsToUser = async (login, numMot) => {\r\n    try {\r\n      const response = await fetch('http://localhost/word-box/server/routeur.php', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: new URLSearchParams({\r\n          objet: 'Liste_mot_sympa',\r\n          action: 'create',\r\n          userName: login,\r\n          numMot: numMot,\r\n        }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`Erreur HTTP ! statut : ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Réponse du webservice:', data);\r\n      return data.data || [];\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la récupération des mots favoris :\", error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n\r\n  const deleteFavWordsToUser = async (login, numMot) => {\r\n    try {\r\n      const response = await fetch('http://localhost/word-box/server/routeur.php', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: new URLSearchParams({\r\n          objet: 'Liste_mot_sympa',\r\n          action: 'delete',\r\n          userName: login,\r\n          numMot: numMot,\r\n        }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`Erreur HTTP ! statut : ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Réponse du webservice:', data);\r\n      return data.data || [];\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la récupération des mots favoris :\", error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  // Gestion des favoris\r\n  const supprFavoris = async () => {\r\n    const icon = document.getElementById('fav-icon');\r\n    let user = sessionStorage.getItem('userName');\r\n    let numMot = word[0].numMot;\r\n    if (icon) {\r\n      icon.classList.toggle('bi-suit-heart-fill');\r\n      icon.classList.toggle('bi-suit-heart');\r\n    }\r\n    if (icon.classList.contains('bi-suit-heart-fill')) {\r\n      let word = await addFavWords();\r\n      await addFavWordsToUser(user, numMot);\r\n    } else {\r\n      let numMot = word[0].numMot;\r\n      await deleteFavWordsToUser(user, numMot);\r\n      deleteFavWords(numMot);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"wrapper fit-box center-text\">\r\n        <h2 data-translate-key=\"titleSearch\">{languageData.titleSearch}</h2>\r\n        <form onSubmit={SearchWord}>\r\n          <div className=\"input-box\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"search\"\r\n              name=\"search\"\r\n              value={word}\r\n              onChange={(event) => setWord(event.target.value)}\r\n              placeholder={languageData.enterWord}\r\n            />\r\n          </div>\r\n          <button className=\"btn\" type=\"submit\" data-translate-key=\"search\">{languageData.search}</button>\r\n        </form>\r\n\r\n\r\n      </div>\r\n      {/* Affichage des résultats */}\r\n      <div className=\"result\">\r\n        {translatedMot && (\r\n          <div className=\"wrapper fit-box center-text\">\r\n            <h1>{translatedMot}</h1>\r\n            <i className=\"bi bi-suit-heart\" id=\"fav-icon\" onClick={supprFavoris}></i>\r\n            <p><strong>{languageData.definition}</strong> {translatedDefinition || 'Chargement...'}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}