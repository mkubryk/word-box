{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\melis\\\\OneDrive\\\\Documents\\\\ENSIIE\\\\S1\\\\web\\\\PROJET-1\\\\boite-a-mot-good-vers\\\\src\\\\pages\\\\ListeMot\\\\ListeMot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLanguage } from '../../store/languageContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListeMot = () => {\n  _s();\n  const [mots, setMots] = useState([]);\n  const {\n    language,\n    languageData\n  } = useLanguage(); // `language` sera soit 'fr' soit 'en'\n\n  // Fonction pour récupérer les mots favoris depuis le backend PHP\n  const getFavWords = async login => {\n    try {\n      const response = await fetch('http://localhost/word-box/server/routeur.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: new URLSearchParams({\n          objet: 'Mot_sympa',\n          action: 'userFavWords',\n          userName: login\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Erreur HTTP ! statut : ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Réponse du webservice:', data);\n      return data.data || [];\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération des mots favoris :\", error);\n      return [];\n    }\n  };\n\n  // Charger les mots favoris au montage du composant\n  useEffect(() => {\n    const fetchFavWords = async () => {\n      var _localStorage$getItem;\n      const userName = (_localStorage$getItem = localStorage.getItem('userName')) !== null && _localStorage$getItem !== void 0 ? _localStorage$getItem : 'leChevalierNoir'; // Remplacez par le nom d'utilisateur connecté\n      const favWords = await getFavWords(userName);\n      setMots(favWords);\n    };\n    fetchFavWords();\n  }, []);\n\n  // Fonction pour basculer le statut de favori\n  const supprFavoris = item => {\n    console.log(\"Cœur cliqué !\");\n    const element = document.getElementById(item.nomMot);\n    if (element) {\n      element.classList.toggle(\"bi-suit-heart-fill\");\n      element.classList.toggle(\"bi-suit-heart\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: mots.map((item, index) => {\n      // Sélectionne la définition selon la langue\n      const definition = language === 'fr' ? item.definitionMotFR : item.definitionMotENG;\n      const mot = language === 'fr' ? item.nomMotFR : item.nomMot;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: mot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-suit-heart-fill\",\n          id: mot,\n          onClick: () => supprFavoris(item)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: languageData.definition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), \" \", definition || languageData.unknownDef]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(ListeMot, \"AD1JbXrhPBLhvjn33A7i1jdbJrg=\", false, function () {\n  return [useLanguage];\n});\n_c = ListeMot;\nexport default ListeMot;\nvar _c;\n$RefreshReg$(_c, \"ListeMot\");","map":{"version":3,"names":["React","useEffect","useState","useLanguage","jsxDEV","_jsxDEV","ListeMot","_s","mots","setMots","language","languageData","getFavWords","login","response","fetch","method","headers","body","URLSearchParams","objet","action","userName","ok","Error","status","data","json","console","log","error","fetchFavWords","_localStorage$getItem","localStorage","getItem","favWords","supprFavoris","item","element","document","getElementById","nomMot","classList","toggle","children","map","index","definition","definitionMotFR","definitionMotENG","mot","nomMotFR","className","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","unknownDef","_c","$RefreshReg$"],"sources":["C:/Users/melis/OneDrive/Documents/ENSIIE/S1/web/PROJET-1/boite-a-mot-good-vers/src/pages/ListeMot/ListeMot.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLanguage } from '../../store/languageContext';\r\n\r\nconst ListeMot = () => {\r\n  const [mots, setMots] = useState([]);\r\n  const { language, languageData } = useLanguage(); // `language` sera soit 'fr' soit 'en'\r\n\r\n  // Fonction pour récupérer les mots favoris depuis le backend PHP\r\n  const getFavWords = async (login) => {\r\n    try {\r\n      const response = await fetch('http://localhost/word-box/server/routeur.php', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: new URLSearchParams({\r\n          objet: 'Mot_sympa',\r\n          action: 'userFavWords',\r\n          userName: login,\r\n        }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`Erreur HTTP ! statut : ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Réponse du webservice:', data);\r\n      return data.data || [];\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la récupération des mots favoris :\", error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  // Charger les mots favoris au montage du composant\r\n  useEffect(() => {\r\n    const fetchFavWords = async () => {\r\n      const userName = localStorage.getItem('userName') ?? 'leChevalierNoir'; // Remplacez par le nom d'utilisateur connecté\r\n      const favWords = await getFavWords(userName);\r\n      setMots(favWords);\r\n    };\r\n\r\n    fetchFavWords();\r\n  }, []);\r\n\r\n  // Fonction pour basculer le statut de favori\r\n  const supprFavoris = (item) => {\r\n    console.log(\"Cœur cliqué !\");\r\n    const element = document.getElementById(item.nomMot);\r\n    if (element) {\r\n      element.classList.toggle(\"bi-suit-heart-fill\");\r\n      element.classList.toggle(\"bi-suit-heart\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {mots.map((item, index) => {\r\n        // Sélectionne la définition selon la langue\r\n        const definition = language === 'fr' ? item.definitionMotFR : item.definitionMotENG;\r\n        const mot = language === 'fr' ? item.nomMotFR : item.nomMot;\r\n\r\n        return (\r\n          <div key={index} className=\"wrapper\">\r\n            <h1>{mot}</h1>\r\n            <i\r\n              className=\"bi bi-suit-heart-fill\"\r\n              id={mot}\r\n              onClick={() => supprFavoris(item)}\r\n            ></i>\r\n            <p>\r\n              <strong>{languageData.definition}</strong> {definition || languageData.unknownDef}\r\n            </p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListeMot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}