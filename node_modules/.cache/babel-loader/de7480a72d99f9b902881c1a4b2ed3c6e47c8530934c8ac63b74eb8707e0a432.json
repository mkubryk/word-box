{"ast":null,"code":"import React,{useState}from\"react\";import{Link}from\"react-router-dom\";import'../../css/inscription.css';import{useLanguage}from'../../store/languageContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Connexion(){const{languageData}=useLanguage();// Déclarez les états pour les champs du formulaire et les messages d'erreur\nconst[login,setLogin]=useState(\"\");const[mdp,setMdp]=useState(\"\");const[errorMessage,setErrorMessage]=useState(\"\");// Pour afficher les messages d'erreur\n/*const handleSubmit = async (e) => {\r\n        e.preventDefault(); // Empêcher le rechargement de la page\r\n\r\n        // Envoyer les données du formulaire au backend PHP via fetch\r\n        try {\r\n            const response = await fetch('http://localhost:8000/routeur.php', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded', // Type de contenu\r\n                },\r\n                body: new URLSearchParams({\r\n                    objet: 'Client',\r\n                    action: 'connect',\r\n                    login: login,\r\n                    mdp: mdp,\r\n                }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (data.success) {\r\n                // Si la connexion réussie, rediriger ou afficher un message de succès\r\n                window.location.href = \"/dashboard\"; // Remplacez \"/dashboard\" par la page souhaitée après connexion\r\n            } else {\r\n                setErrorMessage(data.message || \"Échec de la connexion. Veuillez vérifier vos identifiants.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Erreur lors de la soumission du formulaire :\", error);\r\n            setErrorMessage(\"Une erreur est survenue. Veuillez réessayer.\");\r\n        }\r\n    };*/// Fonction pour vérifier les identifiants via le backend PHP\nconst checkCredentials=async(login,mdp)=>{try{const response=await fetch('http://localhost:80/routeur.php',{method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded'},body:new URLSearchParams({objet:'Client',action:'checkMDP',login:login,mdp:mdp})});const data=await response.json();return data.success;}catch(error){console.error(\"Erreur lors de la vérification des identifiants :\",error);return false;}};// Appeler la fonction checkCredentials dans handleSubmit\nconst handleSubmit=async e=>{e.preventDefault();const isValid=await checkCredentials(login,mdp);if(isValid){window.location.href=\"/\";// Rediriger vers la page d'accueil\n}else{setErrorMessage(\"Échec de la connexion. Veuillez vérifier vos identifiants.\");}};return/*#__PURE__*/_jsx(\"main\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"wrapper\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h1\",{\"data-translate-key\":\"connexion\",children:languageData.connexion}),/*#__PURE__*/_jsx(\"input\",{type:\"hidden\",name:\"objet\",value:\"objet\"}),/*#__PURE__*/_jsx(\"input\",{type:\"hidden\",name:\"action\",value:\"connect\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-box\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"login\",\"data-translate-key\":\"username\",placeholder:\"Nom d'utilisateur\",required:true,value:login,onChange:e=>setLogin(e.target.value)// Met à jour l'état\n}),/*#__PURE__*/_jsx(\"i\",{className:\"bx bxs-user\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-box\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"mdp\",\"data-translate-key\":\"password\",placeholder:\"Mot de passe\",required:true,value:mdp,onChange:e=>setMdp(e.target.value)// Met à jour l'état\n}),/*#__PURE__*/_jsx(\"i\",{className:\"bx bxs-lock-alt\"})]}),errorMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:errorMessage}),\" \",/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",className:\"btn\",\"data-translate-key\":\"connect\",children:[languageData.connect,\" \"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"souvenir-oublie\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\"}),/*#__PURE__*/_jsx(\"label\",{\"data-translate-key\":\"rememberMe\",children:languageData.rememberMe}),/*#__PURE__*/_jsx(Link,{to:\"/mdp-oublie\",\"data-translate-key\":\"forgotPassword\",children:languageData.forgotPassword})]}),/*#__PURE__*/_jsx(\"div\",{className:\"lien-inscription\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"align-content\",children:[/*#__PURE__*/_jsxs(\"p\",{\"data-translate-key\":\"createAccount\",children:[languageData.createAccount,\" \"]}),/*#__PURE__*/_jsx(Link,{to:\"/inscription\",\"data-translate-key\":\"register\",children:languageData.register})]})})]})});}export default Connexion;","map":{"version":3,"names":["React","useState","Link","useLanguage","jsx","_jsx","jsxs","_jsxs","Connexion","languageData","login","setLogin","mdp","setMdp","errorMessage","setErrorMessage","checkCredentials","response","fetch","method","headers","body","URLSearchParams","objet","action","data","json","success","error","console","handleSubmit","e","preventDefault","isValid","window","location","href","children","className","onSubmit","connexion","type","name","value","placeholder","required","onChange","target","connect","rememberMe","to","forgotPassword","createAccount","register"],"sources":["C:/xampp/htdocs/word-box/src/pages/Connexion/Connexion.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport '../../css/inscription.css';\r\nimport { useLanguage } from '../../store/languageContext';\r\n\r\nfunction Connexion() {\r\n\r\n    const { languageData } = useLanguage();\r\n    // Déclarez les états pour les champs du formulaire et les messages d'erreur\r\n    const [login, setLogin] = useState(\"\");\r\n    const [mdp, setMdp] = useState(\"\");\r\n    const [errorMessage, setErrorMessage] = useState(\"\"); // Pour afficher les messages d'erreur\r\n\r\n    /*const handleSubmit = async (e) => {\r\n        e.preventDefault(); // Empêcher le rechargement de la page\r\n\r\n        // Envoyer les données du formulaire au backend PHP via fetch\r\n        try {\r\n            const response = await fetch('http://localhost:8000/routeur.php', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded', // Type de contenu\r\n                },\r\n                body: new URLSearchParams({\r\n                    objet: 'Client',\r\n                    action: 'connect',\r\n                    login: login,\r\n                    mdp: mdp,\r\n                }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (data.success) {\r\n                // Si la connexion réussie, rediriger ou afficher un message de succès\r\n                window.location.href = \"/dashboard\"; // Remplacez \"/dashboard\" par la page souhaitée après connexion\r\n            } else {\r\n                setErrorMessage(data.message || \"Échec de la connexion. Veuillez vérifier vos identifiants.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Erreur lors de la soumission du formulaire :\", error);\r\n            setErrorMessage(\"Une erreur est survenue. Veuillez réessayer.\");\r\n        }\r\n    };*/\r\n    // Fonction pour vérifier les identifiants via le backend PHP\r\n    const checkCredentials = async (login, mdp) => {\r\n        try {\r\n            const response = await fetch('http://localhost:80/routeur.php', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n                body: new URLSearchParams({\r\n                    objet: 'Client',\r\n                    action: 'checkMDP',\r\n                    login: login,\r\n                    mdp: mdp,\r\n                }),\r\n            });\r\n\r\n            const data = await response.json();\r\n            return data.success;\r\n        } catch (error) {\r\n            console.error(\"Erreur lors de la vérification des identifiants :\", error);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    // Appeler la fonction checkCredentials dans handleSubmit\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const isValid = await checkCredentials(login, mdp);\r\n        if (isValid) {\r\n            window.location.href = \"/\"; // Rediriger vers la page d'accueil\r\n        } else {\r\n            setErrorMessage(\"Échec de la connexion. Veuillez vérifier vos identifiants.\");\r\n        }\r\n    };\r\n    return (\r\n        <main>\r\n            <div className=\"wrapper\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <h1 data-translate-key=\"connexion\">{languageData.connexion}</h1>\r\n                    <input type=\"hidden\" name=\"objet\" value=\"objet\" />\r\n                    <input type=\"hidden\" name=\"action\" value=\"connect\" />\r\n\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"login\"\r\n                            data-translate-key=\"username\"\r\n                            placeholder=\"Nom d'utilisateur\"\r\n                            required\r\n                            value={login}\r\n                            onChange={(e) => setLogin(e.target.value)} // Met à jour l'état\r\n                        />\r\n                        <i className='bx bxs-user'></i>\r\n                    </div>\r\n\r\n                    <div className=\"input-box\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"mdp\"\r\n                            data-translate-key=\"password\"\r\n                            placeholder=\"Mot de passe\"\r\n                            required\r\n                            value={mdp}\r\n                            onChange={(e) => setMdp(e.target.value)} // Met à jour l'état\r\n                        />\r\n                        <i className='bx bxs-lock-alt'></i>\r\n                    </div>\r\n\r\n                    {errorMessage && <p className=\"error-message\">{errorMessage}</p>} {/* Affiche les erreurs */}\r\n\r\n                    <button type=\"submit\" className=\"btn\" data-translate-key=\"connect\">{languageData.connect} </button>\r\n                </form>\r\n\r\n                <div className=\"souvenir-oublie\">\r\n                    <input type=\"checkbox\" />\r\n                    <label data-translate-key=\"rememberMe\">{languageData.rememberMe}</label>\r\n\r\n                    <Link to=\"/mdp-oublie\" data-translate-key=\"forgotPassword\">{languageData.forgotPassword}</Link>\r\n                </div>\r\n\r\n                <div className=\"lien-inscription\">\r\n                    <div className=\"align-content\">\r\n                        <p data-translate-key=\"createAccount\">{languageData.createAccount} </p>\r\n                        <Link to=\"/inscription\" data-translate-key=\"register\">{languageData.register}</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Connexion;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}