{"ast":null,"code":"const axios = require('axios');\nconst cheerio = require('cheerio');\n\n// Fonction pour récupérer la définition d'un mot depuis le Wiktionnaire\nasync function fetchDefinitionFromWiktionary(mot) {\n  const url = `https://fr.wiktionary.org/wiki/${encodeURIComponent(mot)}`;\n  try {\n    // Récupérer le HTML de la page\n    const {\n      data\n    } = await axios.get(url);\n    const $ = cheerio.load(data);\n\n    // JSON qui va contenir les informations\n    const result = {\n      mot: mot,\n      definitions: [],\n      exemples: [],\n      etymologie: ''\n    };\n\n    // Extraire la définition\n    $('#mw-content-text .mw-parser-output').find('ol li').each((i, elem) => {\n      const definition = $(elem).text();\n      if (definition) {\n        result.definitions.push(definition.trim());\n      }\n    });\n\n    // Extraire les exemples d'utilisation\n    $('#mw-content-text .mw-parser-output').find('ul li').each((i, elem) => {\n      const exemple = $(elem).text();\n      if (exemple) {\n        result.exemples.push(exemple.trim());\n      }\n    });\n\n    // Extraire l'étymologie (si disponible)\n    const etymologie = $('#mw-content-text .mw-parser-output').find('.etymology').first().text();\n    if (etymologie) {\n      result.etymologie = etymologie.trim();\n    }\n    return result;\n  } catch (error) {\n    console.error(`Erreur lors du scraping de la page Wiktionnaire pour ${mot}:`, error);\n    return {\n      error: \"Erreur de chargement des données\"\n    };\n  }\n}\nmodule.exports = fetchDefinitionFromWiktionary;","map":{"version":3,"names":["axios","require","cheerio","fetchDefinitionFromWiktionary","mot","url","encodeURIComponent","data","get","$","load","result","definitions","exemples","etymologie","find","each","i","elem","definition","text","push","trim","exemple","first","error","console","module","exports"],"sources":["C:/Users/melis/OneDrive/Documents/ENSIIE/S1/web/PROJET-1/boite-a-mot/WordBox/src/script/wiktionaryScraper.js"],"sourcesContent":["const axios = require('axios');\r\nconst cheerio = require('cheerio');\r\n\r\n// Fonction pour récupérer la définition d'un mot depuis le Wiktionnaire\r\nasync function fetchDefinitionFromWiktionary(mot) {\r\n    const url = `https://fr.wiktionary.org/wiki/${encodeURIComponent(mot)}`;\r\n    try {\r\n        // Récupérer le HTML de la page\r\n        const { data } = await axios.get(url);\r\n        const $ = cheerio.load(data);\r\n\r\n        // JSON qui va contenir les informations\r\n        const result = {\r\n            mot: mot,\r\n            definitions: [],\r\n            exemples: [],\r\n            etymologie: ''\r\n        };\r\n\r\n        // Extraire la définition\r\n        $('#mw-content-text .mw-parser-output').find('ol li').each((i, elem) => {\r\n            const definition = $(elem).text();\r\n            if (definition) {\r\n                result.definitions.push(definition.trim());\r\n            }\r\n        });\r\n\r\n        // Extraire les exemples d'utilisation\r\n        $('#mw-content-text .mw-parser-output').find('ul li').each((i, elem) => {\r\n            const exemple = $(elem).text();\r\n            if (exemple) {\r\n                result.exemples.push(exemple.trim());\r\n            }\r\n        });\r\n\r\n        // Extraire l'étymologie (si disponible)\r\n        const etymologie = $('#mw-content-text .mw-parser-output').find('.etymology').first().text();\r\n        if (etymologie) {\r\n            result.etymologie = etymologie.trim();\r\n        }\r\n\r\n        return result;\r\n    } catch (error) {\r\n        console.error(`Erreur lors du scraping de la page Wiktionnaire pour ${mot}:`, error);\r\n        return { error: \"Erreur de chargement des données\" };\r\n    }\r\n}\r\n\r\nmodule.exports = fetchDefinitionFromWiktionary;\r\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;;AAElC;AACA,eAAeE,6BAA6BA,CAACC,GAAG,EAAE;EAC9C,MAAMC,GAAG,GAAG,kCAAkCC,kBAAkB,CAACF,GAAG,CAAC,EAAE;EACvE,IAAI;IACA;IACA,MAAM;MAAEG;IAAK,CAAC,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAACH,GAAG,CAAC;IACrC,MAAMI,CAAC,GAAGP,OAAO,CAACQ,IAAI,CAACH,IAAI,CAAC;;IAE5B;IACA,MAAMI,MAAM,GAAG;MACXP,GAAG,EAAEA,GAAG;MACRQ,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE;IAChB,CAAC;;IAED;IACAL,CAAC,CAAC,oCAAoC,CAAC,CAACM,IAAI,CAAC,OAAO,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,IAAI,KAAK;MACpE,MAAMC,UAAU,GAAGV,CAAC,CAACS,IAAI,CAAC,CAACE,IAAI,CAAC,CAAC;MACjC,IAAID,UAAU,EAAE;QACZR,MAAM,CAACC,WAAW,CAACS,IAAI,CAACF,UAAU,CAACG,IAAI,CAAC,CAAC,CAAC;MAC9C;IACJ,CAAC,CAAC;;IAEF;IACAb,CAAC,CAAC,oCAAoC,CAAC,CAACM,IAAI,CAAC,OAAO,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,IAAI,KAAK;MACpE,MAAMK,OAAO,GAAGd,CAAC,CAACS,IAAI,CAAC,CAACE,IAAI,CAAC,CAAC;MAC9B,IAAIG,OAAO,EAAE;QACTZ,MAAM,CAACE,QAAQ,CAACQ,IAAI,CAACE,OAAO,CAACD,IAAI,CAAC,CAAC,CAAC;MACxC;IACJ,CAAC,CAAC;;IAEF;IACA,MAAMR,UAAU,GAAGL,CAAC,CAAC,oCAAoC,CAAC,CAACM,IAAI,CAAC,YAAY,CAAC,CAACS,KAAK,CAAC,CAAC,CAACJ,IAAI,CAAC,CAAC;IAC5F,IAAIN,UAAU,EAAE;MACZH,MAAM,CAACG,UAAU,GAAGA,UAAU,CAACQ,IAAI,CAAC,CAAC;IACzC;IAEA,OAAOX,MAAM;EACjB,CAAC,CAAC,OAAOc,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,wDAAwDrB,GAAG,GAAG,EAAEqB,KAAK,CAAC;IACpF,OAAO;MAAEA,KAAK,EAAE;IAAmC,CAAC;EACxD;AACJ;AAEAE,MAAM,CAACC,OAAO,GAAGzB,6BAA6B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}